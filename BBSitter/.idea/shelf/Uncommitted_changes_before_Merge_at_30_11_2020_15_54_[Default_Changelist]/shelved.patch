Index: app/src/main/java/com/bbsitter/bbsitter/OpcionesMenu/Anuncios/CrearAnuncioFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bbsitter.bbsitter.OpcionesMenu.Anuncios;\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ListView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.bbsitter.bbsitter.ProgressBarCargando;\r\nimport com.bbsitter.bbsitter.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class CrearAnuncioFragment extends Fragment {\r\n\r\n    private CrearAnuncioViewModel mViewModel;\r\n\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseFirestore bbdd;\r\n\r\n    private TextInputLayout titulo, descripcion;\r\n    private TextInputEditText etTitulo, etDescripcion;\r\n\r\n    private RadioGroup radioGroupTiempo, radioGroupCasa;\r\n    private RadioButton rbFines, rbDiario, rbDiasSueltos, rbHabitualmente, rbCasaFamilia, rbCasaCanguro;\r\n\r\n\r\n    private Button btnCrearAnuncio;\r\n\r\n    private String nombre = \"\";\r\n    private String direccion = \"\";\r\n    private String img = \"\";\r\n\r\n    private ListView listViewPluses, listViewIdiomas;\r\n    private ArrayAdapter<String> adapterPluses, adapterIdiomas;\r\n    private String [] arrayPluses = {\"Carnet de conducir\", \"Primeros auxilios\", \"Cocinar\", \"Ayuda con los deberes\", \"Jugar\"};\r\n    String [] arrayIdiomas = {\"Español\", \"Inglés\", \"Francés\",\"Alemán\", \"Otros\"};\r\n\r\n    public static CrearAnuncioFragment newInstance() {\r\n        return new CrearAnuncioFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.crear_anuncio_fragment, container, false);\r\n\r\n        //Firebase\r\n        mAuth = FirebaseAuth.getInstance();\r\n        bbdd = FirebaseFirestore.getInstance();\r\n\r\n        //EditText\r\n        titulo = view.findViewById(R.id.tituloFamilia_edit_text);\r\n        descripcion = view.findViewById(R.id.descripcionAnuncio_edit_text);\r\n        etTitulo = view.findViewById(R.id.etTituloAnuncio);\r\n        etDescripcion = view.findViewById(R.id.etDescripcionAnuncio);\r\n\r\n        //CheckBox Tiempo\r\n        radioGroupTiempo = view.findViewById(R.id.radioGroupTiempo);\r\n        rbFines = view.findViewById(R.id.radio_button_Fines);\r\n        rbDiario = view.findViewById(R.id.radio_button_Diario);\r\n        rbDiasSueltos = view.findViewById(R.id.radio_button_diasSueltos);\r\n        rbHabitualmente = view.findViewById(R.id.radio_button_Habitualmente);\r\n\r\n        //CheckBox Casa\r\n        radioGroupCasa = view.findViewById(R.id.radioGroupCasa);\r\n        rbCasaFamilia = view.findViewById(R.id.radio_button_CasaFamilia);\r\n        rbCasaCanguro = view.findViewById(R.id.radio_button_CasaCanguro);\r\n\r\n        // ListView Checkboxs PLUSES\r\n        listViewPluses = view.findViewById(R.id.listViewPluses);\r\n        adapterPluses = new ArrayAdapter<>(getContext(), android.R.layout.simple_list_item_multiple_choice, arrayPluses);\r\n        listViewPluses.setAdapter(adapterPluses);\r\n\r\n        // ListView Checkboxs IDIOMAS\r\n        listViewIdiomas = view.findViewById(R.id.listViewIdiomas);\r\n        adapterIdiomas = new ArrayAdapter<>(getContext(), android.R.layout.simple_list_item_multiple_choice, arrayIdiomas);\r\n        listViewIdiomas.setAdapter(adapterIdiomas);\r\n\r\n        //Boton Crear anuncio\r\n        btnCrearAnuncio = (Button) view.findViewById(R.id.btnCrearAnuncio);\r\n\r\n        final ProgressBarCargando progressBarCargando = new ProgressBarCargando(getActivity());\r\n\r\n        btnCrearAnuncio.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                cargarDatos();\r\n\r\n                progressBarCargando.StarProgressBar();\r\n                Handler handler = new Handler();\r\n                handler.postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        progressBarCargando.finishProgressBar();\r\n\r\n                        AnunciosFragment anunciosFragment = new AnunciosFragment();\r\n                        getActivity().getSupportFragmentManager().beginTransaction()\r\n                                .replace(R.id.nav_host_fragment, anunciosFragment)\r\n                                .addToBackStack(null)\r\n                                .commit();\r\n\r\n                    }\r\n                }, 2000);\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\r\n        super.onActivityCreated(savedInstanceState);\r\n        mViewModel = new ViewModelProvider(this).get(CrearAnuncioViewModel.class);\r\n        // TODO: Use the ViewModel\r\n    }\r\n\r\n    private void cargarDatos() {\r\n        final String uid = mAuth.getCurrentUser().getUid();\r\n\r\n        bbdd.collection(\"familias\")\r\n                .whereEqualTo(\"uid\", uid)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n\r\n                        if (task.isSuccessful()) {\r\n\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n\r\n                                //Recogemos los datos de la base de datos\r\n                                nombre = \"Familia \" + document.get(\"nombre\").toString();\r\n                                img = document.get(\"img\").toString();\r\n                                direccion = document.get(\"direccion\").toString();\r\n\r\n                            }\r\n                            /*Cargamos los datos*/\r\n                            String titulo = etTitulo.getText().toString().trim();\r\n                            String descripcion = etDescripcion.getText().toString().trim();\r\n                            String tiempo = obtenerTiempo();\r\n                            String casa = obtenerCasa();\r\n\r\n                            // Creamos un objeto Date\r\n                            Date fechaPublicacion = new Date();\r\n                            // Especificamos un formato\r\n                            String DATE_FORMAT = \"dd MMM HH:mm\";\r\n                            // Create object of SimpleDateFormat and pass the desired date format.\r\n                            SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);\r\n\r\n                            String fechaHoy = sdf.format(fechaPublicacion);\r\n\r\n                            // ListView CHECKBOX PLUSES\r\n                            Map<String, Boolean> mapPluses = new HashMap<>();\r\n                            for (int cont = 0; cont < listViewPluses.getCount(); cont++) {\r\n                                if (listViewPluses.isItemChecked(cont)) {\r\n                                    String textoItemSeleccionado = listViewPluses.getItemAtPosition(cont).toString();\r\n                                    mapPluses.put(textoItemSeleccionado, true);\r\n                                }\r\n                            }\r\n\r\n                            // ListView CHECKBOX IDIOMAS\r\n                            Map<String, Boolean> mapIdiomas = new HashMap<>();\r\n                            for (int cont = 0; cont < listViewIdiomas.getCount(); cont++) {\r\n                                if (listViewIdiomas.isItemChecked(cont)) {\r\n                                    String textoItemSeleccionado = listViewIdiomas.getItemAtPosition(cont).toString();\r\n                                    mapIdiomas.put(textoItemSeleccionado, true);\r\n                                }\r\n                            }\r\n\r\n                            String uid = mAuth.getCurrentUser().getUid();\r\n\r\n\r\n                            Map<String, Object> mapAnuncio = new HashMap<>();\r\n                            mapAnuncio.put(\"titulo\", titulo);\r\n                            mapAnuncio.put(\"descripcion\", descripcion);\r\n                            mapAnuncio.put(\"fechaPublicacion\", fechaHoy);\r\n                            mapAnuncio.put(\"casa\", casa);\r\n                            mapAnuncio.put(\"tiempo\", tiempo);\r\n                            mapAnuncio.put(\"nombre\", nombre);\r\n                            mapAnuncio.put(\"img\", img);\r\n                            mapAnuncio.put(\"direccion\", direccion);\r\n                            mapAnuncio.put(\"pluses\", mapPluses);\r\n                            mapAnuncio.put(\"idiomas\", mapIdiomas);\r\n                            mapAnuncio.put(\"uid\", uid);\r\n\r\n\r\n\r\n                            /*Creamos la coleccion Anuncios en la bbdd*/\r\n                            bbdd.collection(\"anuncios\")\r\n                                    .document()\r\n                                    .set(mapAnuncio);\r\n\r\n\r\n\r\n                        } else {\r\n\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    private String obtenerTiempo() {\r\n\r\n        String tiempo = \"\";\r\n\r\n        if(rbFines.isChecked()){\r\n            tiempo = rbFines.getText().toString();\r\n        }\r\n        else if(rbDiario.isChecked())\r\n        {\r\n            tiempo = rbDiario.getText().toString();\r\n        }\r\n        else if(rbDiasSueltos.isChecked())\r\n        {\r\n            tiempo = rbDiasSueltos.getText().toString();\r\n        }\r\n        else if(rbHabitualmente.isChecked())\r\n        {\r\n            tiempo = rbHabitualmente.getText().toString();\r\n        }\r\n\r\n        return tiempo;\r\n    }\r\n\r\n    private String obtenerCasa() {\r\n\r\n        String casa = \"\";\r\n\r\n        if(rbCasaFamilia.isChecked()){\r\n            casa = rbCasaFamilia.getText().toString();\r\n        }\r\n        else if(rbCasaCanguro.isChecked())\r\n        {\r\n            casa = rbCasaCanguro.getText().toString();\r\n        }\r\n\r\n        return casa;\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bbsitter/bbsitter/OpcionesMenu/Anuncios/CrearAnuncioFragment.java	(revision ca3103a1da5116bbebbb7b56ae28e0ea9662c80c)
+++ app/src/main/java/com/bbsitter/bbsitter/OpcionesMenu/Anuncios/CrearAnuncioFragment.java	(date 1606747940558)
@@ -20,6 +20,7 @@
 import com.bbsitter.bbsitter.R;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
+import com.google.android.material.snackbar.Snackbar;
 import com.google.android.material.textfield.TextInputEditText;
 import com.google.android.material.textfield.TextInputLayout;
 import com.google.firebase.auth.FirebaseAuth;
@@ -64,7 +65,7 @@
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,
                              @Nullable Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.crear_anuncio_fragment, container, false);
+        final View view = inflater.inflate(R.layout.crear_anuncio_fragment, container, false);
 
         //Firebase
         mAuth = FirebaseAuth.getInstance();
@@ -107,28 +108,38 @@
             @Override
             public void onClick(View v) {
 
-                cargarDatos();
-
-                progressBarCargando.StarProgressBar();
-                Handler handler = new Handler();
-                handler.postDelayed(new Runnable() {
-                    @Override
-                    public void run() {
-                        progressBarCargando.finishProgressBar();
+                String titulo = etTitulo.getText().toString().trim();
+                String descripcion = etDescripcion.getText().toString().trim();
+
+
+                if(titulo.isEmpty() || descripcion.isEmpty())
+                {
+                    comprobarDatos();
+                    Snackbar.make(view, "Debes rellenar todos los datos", Snackbar.LENGTH_LONG)
+                            .setAction("Debes rellenar todos los datos", null).show();
+                }
+                else
+                {
+                    cargarDatos();
+                    progressBarCargando.StarProgressBar();
+                    Handler handler = new Handler();
+                    handler.postDelayed(new Runnable() {
+                        @Override
+                        public void run() {
+                            progressBarCargando.finishProgressBar();
 
-                        AnunciosFragment anunciosFragment = new AnunciosFragment();
-                        getActivity().getSupportFragmentManager().beginTransaction()
-                                .replace(R.id.nav_host_fragment, anunciosFragment)
-                                .addToBackStack(null)
-                                .commit();
+                            AnunciosFragment anunciosFragment = new AnunciosFragment();
+                            getActivity().getSupportFragmentManager().beginTransaction()
+                                    .replace(R.id.nav_host_fragment, anunciosFragment)
+                                    .addToBackStack(null)
+                                    .commit();
 
-                    }
-                }, 2000);
+                        }
+                    }, 2000);
+                }
 
             }
         });
-
-
 
         return view;
     }
@@ -141,88 +152,89 @@
     }
 
     private void cargarDatos() {
+
         final String uid = mAuth.getCurrentUser().getUid();
 
-        bbdd.collection("familias")
-                .whereEqualTo("uid", uid)
-                .get()
-                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-                    @Override
-                    public void onComplete(@NonNull Task<QuerySnapshot> task) {
+            bbdd.collection("familias")
+                    .whereEqualTo("uid", uid)
+                    .get()
+                    .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                        @Override
+                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
 
-                        if (task.isSuccessful()) {
+                            if (task.isSuccessful()) {
 
-                            for (QueryDocumentSnapshot document : task.getResult()) {
+                                for (QueryDocumentSnapshot document : task.getResult()) {
 
-                                //Recogemos los datos de la base de datos
-                                nombre = "Familia " + document.get("nombre").toString();
-                                img = document.get("img").toString();
-                                direccion = document.get("direccion").toString();
+                                    //Recogemos los datos de la base de datos
+                                    nombre = "Familia " + document.get("nombre").toString();
+                                    img = document.get("img").toString();
+                                    direccion = document.get("direccion").toString();
 
-                            }
-                            /*Cargamos los datos*/
-                            String titulo = etTitulo.getText().toString().trim();
-                            String descripcion = etDescripcion.getText().toString().trim();
-                            String tiempo = obtenerTiempo();
-                            String casa = obtenerCasa();
+                                }
+                                /*Cargamos los datos*/
+                                String titulo = etTitulo.getText().toString().trim();
+                                String descripcion = etDescripcion.getText().toString().trim();
+                                String tiempo = obtenerTiempo();
+                                String casa = obtenerCasa();
 
-                            // Creamos un objeto Date
-                            Date fechaPublicacion = new Date();
-                            // Especificamos un formato
-                            String DATE_FORMAT = "dd MMM HH:mm";
-                            // Create object of SimpleDateFormat and pass the desired date format.
-                            SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
+                                // Creamos un objeto Date
+                                Date fechaPublicacion = new Date();
+                                // Especificamos un formato
+                                String DATE_FORMAT = "dd MMM HH:mm";
+                                // Create object of SimpleDateFormat and pass the desired date format.
+                                SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
 
-                            String fechaHoy = sdf.format(fechaPublicacion);
+                                String fechaHoy = sdf.format(fechaPublicacion);
 
-                            // ListView CHECKBOX PLUSES
-                            Map<String, Boolean> mapPluses = new HashMap<>();
-                            for (int cont = 0; cont < listViewPluses.getCount(); cont++) {
-                                if (listViewPluses.isItemChecked(cont)) {
-                                    String textoItemSeleccionado = listViewPluses.getItemAtPosition(cont).toString();
-                                    mapPluses.put(textoItemSeleccionado, true);
-                                }
-                            }
+                                // ListView CHECKBOX PLUSES
+                                Map<String, Boolean> mapPluses = new HashMap<>();
+                                for (int cont = 0; cont < listViewPluses.getCount(); cont++) {
+                                    if (listViewPluses.isItemChecked(cont)) {
+                                        String textoItemSeleccionado = listViewPluses.getItemAtPosition(cont).toString();
+                                        mapPluses.put(textoItemSeleccionado, true);
+                                    }
+                                }
 
-                            // ListView CHECKBOX IDIOMAS
-                            Map<String, Boolean> mapIdiomas = new HashMap<>();
-                            for (int cont = 0; cont < listViewIdiomas.getCount(); cont++) {
-                                if (listViewIdiomas.isItemChecked(cont)) {
-                                    String textoItemSeleccionado = listViewIdiomas.getItemAtPosition(cont).toString();
-                                    mapIdiomas.put(textoItemSeleccionado, true);
-                                }
-                            }
+                                // ListView CHECKBOX IDIOMAS
+                                Map<String, Boolean> mapIdiomas = new HashMap<>();
+                                for (int cont = 0; cont < listViewIdiomas.getCount(); cont++) {
+                                    if (listViewIdiomas.isItemChecked(cont)) {
+                                        String textoItemSeleccionado = listViewIdiomas.getItemAtPosition(cont).toString();
+                                        mapIdiomas.put(textoItemSeleccionado, true);
+                                    }
+                                }
 
-                            String uid = mAuth.getCurrentUser().getUid();
+                                String uid = mAuth.getCurrentUser().getUid();
 
 
-                            Map<String, Object> mapAnuncio = new HashMap<>();
-                            mapAnuncio.put("titulo", titulo);
-                            mapAnuncio.put("descripcion", descripcion);
-                            mapAnuncio.put("fechaPublicacion", fechaHoy);
-                            mapAnuncio.put("casa", casa);
-                            mapAnuncio.put("tiempo", tiempo);
-                            mapAnuncio.put("nombre", nombre);
-                            mapAnuncio.put("img", img);
-                            mapAnuncio.put("direccion", direccion);
-                            mapAnuncio.put("pluses", mapPluses);
-                            mapAnuncio.put("idiomas", mapIdiomas);
-                            mapAnuncio.put("uid", uid);
+                                Map<String, Object> mapAnuncio = new HashMap<>();
+                                mapAnuncio.put("titulo", titulo);
+                                mapAnuncio.put("descripcion", descripcion);
+                                mapAnuncio.put("fechaPublicacion", fechaHoy);
+                                mapAnuncio.put("casa", casa);
+                                mapAnuncio.put("tiempo", tiempo);
+                                mapAnuncio.put("nombre", nombre);
+                                mapAnuncio.put("img", img);
+                                mapAnuncio.put("direccion", direccion);
+                                mapAnuncio.put("pluses", mapPluses);
+                                mapAnuncio.put("idiomas", mapIdiomas);
+                                mapAnuncio.put("uid", uid);
 
 
 
-                            /*Creamos la coleccion Anuncios en la bbdd*/
-                            bbdd.collection("anuncios")
-                                    .document()
-                                    .set(mapAnuncio);
+                                /*Creamos la coleccion Anuncios en la bbdd*/
+                                bbdd.collection("anuncios")
+                                        .document()
+                                        .set(mapAnuncio);
 
 
 
-                        } else {
+                            } else {
 
-                        }
-                    }
-                });
+                            }
+                        }
+                    });
 
 
     }
@@ -265,5 +277,36 @@
         return casa;
     }
 
+    private boolean comprobarDatos() {
+        Boolean validar = true;
+
+        String tituloAnuncio = etTitulo.getText().toString().trim();
+        String descripcionAnuncio = etDescripcion.getText().toString().trim();
+
+
+        if(tituloAnuncio.isEmpty()){
+            titulo.setError("Debes rellenar el campo");
+
+            validar = false;
+        }
+        if(descripcionAnuncio.isEmpty())
+        {
+            descripcion.setError("Debes rellenar el campo");
+            validar = false;
+        }
+
+
+        if(!tituloAnuncio.isEmpty())
+        {
+            titulo.setError(null);
+        }
+        if(!descripcionAnuncio.isEmpty())
+        {
+            descripcion.setError(null);
+        }
+
+
+        return validar;
+    }
 
 }
\ No newline at end of file
